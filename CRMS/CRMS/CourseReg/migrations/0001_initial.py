# Generated by Django 4.2.1 on 2023-05-15 00:58

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Campus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Class',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('campus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CourseReg.campus')),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True)),
                ('title', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=255)),
                ('is_core', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Period',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(max_length=6)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=20, unique=True)),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254, null=True, unique=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('user_type', models.CharField(choices=[('administrator', 'Administrator'), ('lecturer', 'Lecturer'), ('student', 'Student')], max_length=13)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Lecturer',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
            bases=('CourseReg.user',),
        ),
        migrations.CreateModel(
            name='Slot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(choices=[('Mon', 'Monday'), ('Tue', 'Tuesday'), ('Wed', 'Wednesday'), ('Thu', 'Thursday'), ('Fri', 'Friday'), ('Sat', 'Saturday'), ('Sun', 'Sunday')], max_length=3)),
                ('period', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CourseReg.period')),
            ],
        ),
        migrations.CreateModel(
            name='Semester',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('reg_start', models.DateTimeField()),
                ('reg_end', models.DateTimeField()),
                ('is_active', models.BooleanField(default=True)),
                ('campus', models.ManyToManyField(to='CourseReg.campus')),
            ],
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('core_courses', models.ManyToManyField(related_name='main', to='CourseReg.course')),
                ('elective_courses', models.ManyToManyField(related_name='electives', to='CourseReg.course')),
                ('fundamental_courses', models.ManyToManyField(related_name='fundamental', to='CourseReg.course')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CourseReg.school')),
            ],
        ),
        migrations.CreateModel(
            name='CourseRegistration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_registered', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('registered', 'Registered'), ('dropped', 'Dropped'), ('completed', 'Completed'), ('failed', 'Failed')], max_length=10)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CourseReg.course')),
                ('registered_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CourseReg.class')),
                ('semester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CourseReg.semester')),
            ],
        ),
        migrations.AddField(
            model_name='class',
            name='course',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CourseReg.course'),
        ),
        migrations.AddField(
            model_name='class',
            name='room',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='CourseReg.room'),
        ),
        migrations.AddField(
            model_name='class',
            name='slot',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='CourseReg.slot'),
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('student_id', models.CharField(max_length=20)),
                ('country', models.CharField(max_length=255)),
                ('profile_image', models.ImageField(upload_to='profiles/')),
                ('courses', models.ManyToManyField(related_name='registered_students', through='CourseReg.CourseRegistration', to='CourseReg.course')),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CourseReg.program')),
            ],
            options={
                'abstract': False,
            },
            bases=('CourseReg.user',),
        ),
        migrations.AddField(
            model_name='courseregistration',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CourseReg.student'),
        ),
        migrations.AddField(
            model_name='class',
            name='lecturer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='CourseReg.lecturer'),
        ),
        migrations.AlterUniqueTogether(
            name='courseregistration',
            unique_together={('student', 'registered_class')},
        ),
    ]
